{"version":3,"sources":["gulpfile.js"],"names":["mvb","require","highlightjs","rename","gulp","paths","articles","articleTemplate","articlesBasepath","mvbConf","glob","template","permalink","article","id","highlight","code","lang","languages","undefined","highlightAuto","value","grouping","byYear","forEach","year","date","toISOString","replace","push","task","src","pipe","pug","dest"],"mappings":";;AAAA,IAAIA,GAAG,GAAGC,OAAO,CAAC,UAAD,CAAjB;;AACA,IAAIC,WAAW,GAAGD,OAAO,CAAC,cAAD,CAAzB;;AACA,IAAIE,MAAM,GAAGF,OAAO,CAAC,aAAD,CAApB;;AACA,IAAIG,IAAI,GAAGH,OAAO,CAAC,MAAD,CAAlB;;AAEA,IAAMI,KAAK,GAAG;AACZC,EAAAA,QAAQ,EAAE,CAAC,mBAAD,CADE;AAEZ;AACAC,EAAAA,eAAe,EAAE,2BAHL;AAIZC,EAAAA,gBAAgB,EAAE;AAJN,CAAd;AAOA,IAAMC,OAAO,GAAG;AACd;AACAC,EAAAA,IAAI,EAAEL,KAAK,CAACC,QAFE;AAGd;AACAK,EAAAA,QAAQ,EAAEN,KAAK,CAACE,eAJF;AAKd;AACA;AACAK,EAAAA,SAPc,qBAOJC,OAPI,EAOK;AACjB,sBAAWR,KAAK,CAACG,gBAAjB,cAAqCK,OAAO,CAACC,EAA7C;AACD,GATa;AAUd;;AACA;;;AAGAC,EAAAA,SAdc,qBAcJC,IAdI,EAcEC,IAdF,EAcQ;AACpB,QAAMC,SAAS,GAAID,IAAI,IAAI,IAAT,GAAiB,CAACA,IAAD,CAAjB,GAA0BE,SAA5C;AACA,WAAOjB,WAAW,CAACkB,aAAZ,CAA0BJ,IAA1B,EAAgCE,SAAhC,EAA2CG,KAAlD;AACD,GAjBa;AAkBd;AACA;AACA;AACA;AACAC,EAAAA,QAtBc,oBAsBLhB,QAtBK,EAsBK;AACjB,QAAMiB,MAAM,GAAG,EAAf;AACAjB,IAAAA,QAAQ,CAACkB,OAAT,CAAiB,UAACX,OAAD,EAAa;AAC5B,UAAIY,IAAI,GAAGZ,OAAO,CAACa,IAAR,CAAaC,WAAb,GAA2BC,OAA3B,CAAmC,KAAnC,EAA0C,EAA1C,CAAX;AACAL,MAAAA,MAAM,CAACE,IAAD,CAAN,KAAiBF,MAAM,CAACE,IAAD,CAAN,GAAe,EAAhC;AACA,aAAOF,MAAM,CAACE,IAAD,CAAN,CAAaI,IAAb,CAAkBhB,OAAlB,CAAP;AACD,KAJD;AAKA,WAAO;AAAEU,MAAAA,MAAM,EAANA;AAAF,KAAP;AACD;AA9Ba,CAAhB;AAiCAnB,IAAI,CAAC0B,IAAL,CAAU,UAAV,EAAsB;AAAA,SACpB1B,IAAI,CAAC2B,GAAL,CAAS1B,KAAK,CAACC,QAAf,EACG0B,IADH,CACQhC,GAAG,CAACS,OAAD,CADX,EAEGuB,IAFH,CAEQC,GAAG,EAFX,EAGGD,IAHH,CAGQ5B,IAAI,CAAC8B,IAAL,CAAU7B,KAAK,CAACG,gBAAhB,CAHR,CADoB;AAAA,CAAtB","sourcesContent":["var mvb = require('gulp-mvb');\nvar highlightjs = require('highlight.js');\nvar rename = require(\"gulp-rename\");\nvar gulp = require('gulp');\n\nconst paths = {\n  articles: ['src/articles/*.md'],\n  //feedTemplate: 'src/templates/atom.pug',\n  articleTemplate: 'src/templates/article.pug',\n  articlesBasepath: 'articles'\n};\n\nconst mvbConf = {\n  // glob that locates the article markdown files\n  glob: paths.articles,\n  // the template for an article page\n  template: paths.articleTemplate,\n  // callback function for generating an article permalink.\n  // see docs below for info on the article properties.\n  permalink(article) {\n    return `/${paths.articlesBasepath}/${article.id}.html`;\n  },\n  // callback function to further modify an article after it has been loaded.\n  /*loaded(article) {\n    article.calculatedData = doSomething();\n  },*/\n  highlight(code, lang) {\n    const languages = (lang != null) ? [lang] : undefined;\n    return highlightjs.highlightAuto(code, languages).value;\n  },\n  // callback function for generating custom article groups.\n  // access the return value via the groupedArticles property, so that you can\n  // either return an array if you only have one group or return an object with\n  // named groups in case you want to use multiple groups (by date, by tag, ...)\n  grouping(articles) {\n    const byYear = {};\n    articles.forEach((article) => {\n      let year = article.date.toISOString().replace(/-.*/, \"\");\n      byYear[year] || (byYear[year] = []);\n      return byYear[year].push(article);\n    });\n    return { byYear };\n  }\n}\n\ngulp.task('articles', () =>\n  gulp.src(paths.articles)\n    .pipe(mvb(mvbConf))\n    .pipe(pug())\n    .pipe(gulp.dest(paths.articlesBasepath))\n);\n\n"],"file":"gulpfile.dev.js"}